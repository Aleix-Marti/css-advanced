:root {
  --color-aqua: aquamarine;
  --color-turq: turquoise;
  --color-black: #111;

  --color-green: hsl(120, 100%, 80%);
  --color-blue: hsl(240, 100%, 30%);

  --color-lightgray: #eeeeee;
  --color-darkgray: #ccc;
  --color-dark: #222;
  --color-black: black;

  --gradient-text: lch(67 33.39 287.99 / 0.85);


  --bg-form: transparent;

  --theme-primary: var(--color-green);
  --theme-secondary: var(--color-dark-blue);
  --theme-background:var(--color-dark);
  --theme-text:var(--color-lightgray);

  --accent: var(--theme-primary);
  --icon-size: max(2rem,4cqw);

  --form-shadow: inset 2px 2px 5px 3px #000;

}

*,
*::after,
*::before {
  box-sizing: border-box;
}

/***************/
/*  Utilities  */
/***************/

.check-toggle,
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
}

.icon {
  display: inline-block;
  width: var(--icon-size);
  height: var(--icon-size);
  fill: currentColor;
  vertical-align: middle;
  filter: var(--icon-shadow);
  transition: all .3s;
  &:hover {
    filter: var(--icon-shadow-hover);
  }
}


/* .btn {
  all: unset;
  border: 2px solid var(--theme-primary);
  padding: 1rem 2rem;
}
.btn:hover {
  background: radial-gradient( closest-side at 25% 75%, var(--theme-primary), var(--theme-secondary));
} */




body {
  --theme-primary: var(--color-green);
  --theme-secondary: var(--color-aqua);
  --theme-background:var(--color-dark);
  --theme-text:var(--color-lightgray);
  --accent: var(--theme-primary);

  --icon-shadow: drop-shadow(0 0 2px var(--theme-primary));
  --icon-shadow-hover: drop-shadow(0 0 2px var(--theme-primary)) drop-shadow(0 0 4px var(--theme-primary));


  --theme-primary-auto: var(--color-green);
  --theme-secondary-auto: var(--color-aqua);
  --theme-background-auto:var(--color-dark);
  --theme-text-auto:var(--color-lightgray);

  background-color: var(--theme-background);
  color: var(--theme-text);
  font-family: 'Montserrat', Arial, sans-serif;

}

@media (prefers-color-scheme: dark) {
  body {
  --theme-primary-auto: var(--color-green);
  --theme-secondary-auto: var(--color-aqua);
  --theme-background-auto:var(--color-dark);
  --theme-text-auto:var(--color-lightgray);
  --icon-shadow-auto: drop-shadow(0 0 2px var(--theme-primary));
  --icon-shadow-hover-auto: drop-shadow(0 0 2px var(--theme-primary)) drop-shadow(0 0 4px var(--theme-primary));
  --form-shadow-auto: inset 2px 2px 5px 3px #000;
  }
}
@media (prefers-color-scheme: light) {
  body {
  --theme-primary-auto: var(--color-blue);
  --theme-secondary-auto: var(--color-turk);
  --theme-background-auto:var(--color-lightgray);
  --theme-text-auto:var(--color-black);
  --icon-shadow-auto: none;
  --icon-shadow-hover-auto: drop-shadow(0 0 2px var(--theme-primary)) drop-shadow(0 0 4px var(--theme-primary));
  --form-shadow-auto: inset 2px 2px 5px 3px hsl(0,0%,45%);
  }
}

a {
  color:var(--theme-primary);
}

/************/
/*  Header  */
/************/

.menu {
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}
.menu > img {
  margin-right: auto;
}
.theme, 
.theme label {
  display: flex;
  cursor: pointer;
}
.theme label:hover img {
  filter:invert(0.6);
}
label:has(+input:checked) img {
  filter:invert(0.4);
} 

body:has(.theme #dark:checked) {
  --theme-primary: var(--color-green);
  --theme-secondary: var(--color-aqua);
  --theme-background:var(--color-dark);
  --theme-text:var(--color-lightgray);
  --icon-shadow: drop-shadow(0 0 2px var(--theme-primary));
  --icon-shadow-hover: drop-shadow(0 0 2px var(--theme-primary)) drop-shadow(0 0 4px var(--theme-primary));
  --form-shadow: inset 2px 2px 5px 3px #000;
}
body:has(.theme #light:checked) {
  --theme-primary: var(--color-blue);
  --theme-secondary: var(--color-turq);
  --theme-background:var(--color-lightgray);
  --theme-text:var(--color-black);
  --icon-shadow: none;
  --icon-shadow-hover: drop-shadow(0 0 2px var(--theme-primary)) drop-shadow(0 0 4px var(--theme-primary));
  --form-shadow: inset 2px 2px 5px 3px hsl(0,0%,45%);
}
body:has(.theme #system:checked) {
  --theme-primary: var(--theme-primary-auto);
  --theme-secondary: var(--theme-secondary-auto);
  --theme-background:var(--theme-background-auto);
  --theme-text:var(--theme-text-auto);
  --icon-shadow: var(--icon-shadow-auto);
  --icon-shadow-hover: var(--icon-shadow-hover-auto);
  --form-shadow: var(--form-shadow-auto);
}



/*************/
/*  Contact  */
/*************/



/****************/
/*  Formulario  */
/****************/

.form-style {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 0;
  padding: 0;
}
.form .form-style label {
  color: var(--theme-primary);
}
.toggle {
  position: relative;
  display: flex;
  align-items: center;
  margin-inline-end: 6rem;
}
.toggle::after {
  content: '';
  position: absolute;
  left: calc(100% + 1rem);
  display: block;
  width: 4rem;
  height: 2rem;
  border: 2px solid var(--theme-primary);
  border-radius: 2rem;
}
.toggle::before {
  content: '';
  position: absolute;
  left: calc(100% + 1rem);
  display: block;
  width: 2rem;
  height: 2rem;
  border-radius: 2rem;
  background-color: var(--theme-primary);
  transition: all .3s;
}
.form-style:has(#line:checked) .toggle::before {
  left: calc(100% + 1rem);
}
.form-style:has(#line:not(:checked)) .toggle::before {
  left: calc(100% + 3rem);
}




.form {
  position: relative;
  display: grid;
  gap: 4rem;
  accent-color: var(--accent);
}

.form label {
  color: var(--theme-text);
  cursor: pointer;
}

.form input {
  color: var(--theme-text);
  font-size: 1rem;
  background-color: transparent;
}

.form-switch {
  grid-area: switch;
  justify-self: flex-start;
}
.form-name {
  grid-area: name;
}
.form-email {
  grid-area: email;
}
.form-learn {
  grid-area: learn;
}
.form-level {
  grid-area: level;
}
.form-message {
  grid-area: message;
}
.form-rgpd {
  grid-area: rgpd;
  justify-self: flex-start;
}
.form-submit {
  grid-area: submit;
  width: fit-content;
}
.form-resp {
  grid-area: resp;
}





/* .labelrow label { */
.contact:has(#line:checked) .form .field-text {
  position: relative;
  padding: 0;
  border: 0;
}
.contact:has(#line:checked) .form .field-text label {
  display: block;
  position: absolute;
  bottom: .5rem;
  z-index: 1;
  transition: all 0.3s ease-in-out;
  /* transform: translateY(0) */
}
.contact:has(#line:checked) .form .field-text:has(input:focus) label,
.contact:has(#line:checked) .form .field-text:has(input:not(:placeholder-shown)) label {
  color: var(--theme-primary);
  transform: translateY(-120%) scale(0.9);
}

/* fieldset:has(input:not(:placeholder-shown)) label {
  color: blue;
} */

.contact:has(#line:checked) .form input::placeholder {
  color: transparent;
}
.contact:has(#line:checked) .form input:not([type="checkbox"]):focus {
  outline: none;
}
.contact:has(#line:checked) .form input:focus {
  outline-color: var(--theme-primary);
}

.form input {
  width: 100%;
  border: 0;
  border-bottom: 2px solid var(--theme-primary);
  background-color: transparent;
  transition: all .3s;
}
.contact:has(#line:checked) .form input:focus {
  border-bottom: 4px solid var(--theme-primary);
}

/* .contact:has(#line:checked) .form .field-check,
.contact:has(#line:checked) .form .field-radio { */
.form fieldset legend {
  color: var(--theme-primary);
  padding-block-end: 1rem;
}
.form fieldset:is(.field-check, .field-radio) {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: start;
  gap: 1rem;
  border: 0;
  padding: 0;
}
.form input:is([type="checkbox"],[type="radio"]) {
  width: auto;
}

.form .field-area {
  position: relative;
  display: grid;
  border: 0;
  padding: 0;
}
.contact:has(#line:checked) .form textarea {
  height: 50px;
  color: var(--theme-text);
  /* background-color: var(--theme-background); */
  transition: height .3s;
  border: 0;
  line-height: 2rem;
  background: linear-gradient(var(--theme-background), var(--theme-background) 1.9rem, var(--theme-primary), 1.9rem, var(--theme-primary));
  background-size: 100% 2rem;
  background-repeat: repeat-y;
  resize: none;
}
.contact:has(#line:checked) .form textarea::placeholder {
  color: transparent;
}
.contact:has(#line:checked) .form textarea:focus,
.contact:has(#line:checked) .form textarea:not(:placeholder-shown) {
  height: 200px;
  outline: none;
}
.contact:has(#line:checked) .form .field-area label {
  display: block;
  position: absolute;
  top: 0;
  z-index: 1;
  transition: all 0.3s ease-in-out;
  /* transform: translateY(0) */
}
.contact:has(#line:checked) .form .field-area:has(textarea:focus) label,
.contact:has(#line:checked) .form .field-area:has(textarea:not(:placeholder-shown)) label {
  color: var(--theme-primary);
  transform: scale(0.9) translate(-1rem, -2rem);
}


.contact:has(#line:checked) .form .field-rgpd {
  border: none;
  padding: 0;
}

.form label:has(+input[type="checkbox"].visually-hidden)::before{
  --radius: 0;
  --size-input: 1.2rem;
  --size-input-inset: .5rem;
}
.form label:has(+input[type="radio"].visually-hidden)::before{
  --radius: 50%;
  --size-input: 1.2rem;
  --size-input-inset: .5rem;
}

.form label:has(+input.visually-hidden)  {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  cursor: pointer;
}
.form label:has(+input.visually-hidden)::before {
  content: '';
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--size-input);
  height: var(--size-input);
  border: 2px solid var(--theme-primary);
  border-radius: var(--radius);
}
.form label:has(+input.visually-hidden:checked)::before {
  /* content: 'âœ“'; */
  color: var(--color-black);
  background-color: var(--theme-primary);
  box-shadow: inset 0 0 1px 2px var(--theme-background);
  animation: pulse .3s ease-out;
  /* filter: drop-shadow(0 0 .25rem var(--theme-primary)) drop-shadow(0 0 1.5rem var(--theme-primary)) */

}
/* .form label:has(+input.visually-hidden:checked)::before {
  content: '';
  position: absolute;
  right: 0.2rem;
  top: 0.3rem;
  width: 0.7rem;
  height: 0.4rem;
  border: 0;
  border-bottom: 2px solid var(--color-black);
  border-left: 2px solid var(--color-black);
  transform: rotate(-45deg);
} */
@keyframes pulse {
  0% {
    filter: drop-shadow(0 0 0 var(--theme-primary));
  }
  50% {
    filter: drop-shadow(0 0 .5rem var(--theme-primary));
  }
}







.contact:has(#shadow:checked) .form :is(.field-text,.field-area) label {
  color: var(--theme-primary);
}

.contact:has(#shadow:checked) fieldset:not(.form-style) {
  border: 0;
  padding: 0;
  /* display: flex;
  flex-direction: column; */
}
.contact:has(#shadow:checked) .form textarea {
  height: 50px;
  color: var(--theme-text);
}
.contact:has(#shadow:checked) .form textarea label {
  margin-bottom: 1rem;
}
.contact:has(#shadow:checked) .form :is(input:not([type="submit"]),textarea) {
  padding: 1rem 0;
  border: 0;
  border-bottom: 1px solid var(--theme-primary);
  background-color: var(--theme-background);
  transition: all .3s;
  /* box-shadow: 0 2px 10px 5px var(--theme-primary),
              inset 0 0 0 0 var(--theme-primary); */
}
.contact:has(#shadow:checked) .form :is(input:not([type="submit"]),textarea):focus {
  padding: 1rem;
  outline: none;
  border-radius: 4px;
  border: none;
  box-shadow: var(--form-shadow);
  /* border: 1px solid var(--theme-primary); */
  /* animation: shadow 2s infinite alternate; */
  /* box-shadow: 0 0 0 0 var(--theme-primary),
              inset 0 0 10px 1px var(--theme-primary); */
}
/* @keyframes shadow {
  from {
    box-shadow: inset 0 0 15px -5px var(--theme-primary);
  } 
  to {
    box-shadow: inset 0 0 15px 1px var(--theme-primary);
  }
  
} */








.form input.form-submit {
  justify-self: center;
  display: block;
  width: 50%;
  padding: 1rem 2rem;
  border: 2px solid var(--theme-primary);
  color: var(--theme-primary);
  background-color: var(--theme-background);
  cursor: pointer;
  transition: all .3s;
}
.form input.form-submit {
  &:hover{
    background-color: var(--theme-primary);
    color: var(--theme-background);
  }
}

.form-resp {
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--theme-primary);
}
.spinner {
  display: none;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background: conic-gradient(var(--theme-primary), transparent);
  animation: spin 1s linear infinite;
}
.spinner::after{
  content: '';
  position: absolute;
  width: 60%;
  height: 60%;
  background-color: var(--theme-background);
  border-radius: 50%;
  background-size: 50%;
  background-repeat: no-repeat;
}
@keyframes spin {
  0% {
    transform: rotateZ(0);
  }
  100% {
    transform: rotateZ(360deg);
  }
}








.contact {
  container-type: inline-size;
  container-name: contact;
}

.contact-info {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;

}

.form {
  display: grid;
  grid-template-areas: 
    "switch"
    "name"
    "email"
    "learn"
    "level"
    "message"
    "rgpd"
    "submit"
    "resp";
}

.social {
  display: grid;
  grid-auto-rows: max-content;
  grid-template-columns: repeat(8, 1fr);
  gap: 1rem;
}

@container contact (700px < width < 900px) {
  .social {
    grid-template-columns: 1fr;
  }
}

@container contact (width > 900px) {
  .social {
    grid-template-columns: repeat(4, 1fr);
    gap: 2cqw;
  }
}

@container contact (width > 700px) {
  .contact-info {
    grid-template-columns: 2fr 1fr;
  }
  .form {
    display: grid;
    grid-template-areas: 
      "switch switch"
      "name email"
      "learn level"
      "message message"
      "rgpd rgpd"
      "submit submit"
      "resp resp";
  }
  .form fieldset:is(.field-check, .field-radio) {
    grid-template-columns: 1fr;
  }
}


.vista {
  display: flex;
  position: relative;
  width: 2rem;
  height: 1rem; 
}
.vista::before {
  content: '';
  position: absolute;
  left: 0;
  width: 1rem;
  height: 1rem;
  background-color: transparent;
  border: 2px solid;
}
.vista::after {
  content: '';
  position: absolute;
  right: 0;
  width: 1rem;
  height: 1rem;
  background-color: transparent;
  border: 2px solid;
}
.vista:has(.selector:checked)::before {
  background-color: red;
}
.vista:has(.selector:checked)::after {
  background-color: transparent;
}
.vista:has(.selector:not(:checked))::before {
  background-color: transparent;
}
.vista:has(.selector:not(:checked))::after {
  background-color: red;
}


ul.list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  list-style: none;
}
.selector:checked + ul.list {
  flex-direction: column;
}

/* ul.list li:hover {
  animation-name: getBold;
  animation-duration: .25s;
  animation-iteration-count: 1;
  cursor: pointer;
  font-weight: 900;
  color: lime;
}
ul.list li:not(:hover) {
  animation-name: getThin;
  animation-duration: .25s;
  animation-iteration-count: 1;
  font-weight: 200;
  color: blue;
} */

ul.list li {
  color: lime;
  transition: all 1s;
}

ul.list li:hover {
  animation: colorUp 1s linear forwards;
  /* color: blue; */
}
ul.list li:not(:hover) {
  animation: colorDown 1s linear forwards;
}

@keyframes colorUp {
  0% {
    color: lime
  }
  100% {
    color: blue;
  }
}

@keyframes colorDown {
  0% {
    color: blue
  }
  100% {
    color: lime;
  }
}


.bg-text {
  background: linear-gradient(115deg, blue, red, lime, blue);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 200%;
  background-position: 100% 0%;
  animation: colortext 2s linear infinite alternate;
}


@keyframes rotatebg {
  from {
    transform: rotateZ(0);
  }
  to {
    transform: rotateZ(360deg);

  }
}

@keyframes colortext {
  from {
    background-position: 100% 0%;
  }
  to {
    background-position: 0% 0%;
  }
}
